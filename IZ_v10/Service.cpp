#include "Service.h"

Services::Services()
{
	//значения по умолчанию
	service_name = "нет данных";
	service_code = -1;
	rate = -1;
	interval = "нет данных";
}

void Services::file_reading(string path, int index)
{
	//функция реализуется иначе, потому что наименование услуги может состоять из любого количества слов
	//поэтому читаем файл построчно, а потом разбиваем строку по запятым 

	ifstream fin(path); //открываем файл для чтения
	if (!fin.is_open())	//проверка на открытие
	{
		cout << "Error opening file: Service.txt";
		return;
	}

	string line; //временная строка для построчного чтения файла

	//чтобы считать N-ую строку из файла цикл выполняется N раз 
	for (int i = 0; i <= index; i++)
	{
		getline(fin, line);
	}
	string tmp; //временная строка для копирования символов из line
	int points_count = 0;	//счетчик количества запятых
	for (int i = 0; i < line.length(); i++) //проходим по строке line
	{
		if (line[i] != ',') tmp += line[i]; //если символ это не запятая, добавляем его tmp

		if (line[i] == ',') //если символ это запятая,
		{
			switch (points_count) { //то в зависимости от текущего количества запятых:
			case 0: {
				service_name = tmp; //если это первая запятая, то записываем в наименование услуги
				tmp = "";			//опустошаем временную строку
				points_count++;		//увеличиваем количество запятых
			}
				  break;
			case 1: {
				service_code = stoi(tmp); //если это вторая запятая, то переводим в int и записываем в код услуги
				tmp = "";			//опустошаем временную строку
				points_count++;		//увеличиваем количество запятых
			}break;
			case 2: {
				rate = stof(tmp);	//если это третья запятая, то переводим в float и записываем в тариф 
				tmp = "";			//опустошаем временную строку
				points_count++;		//увеличиваем количество запятых
			}break;
			default: { //если запятых больше чем 3, то ошибка в формате данных в файле 
				cout << "Ошибка формата данных: Service.txt";
				return;
			}
			}
			//когда дошли до конца строки
			if (i == line.length() - 1)
			{
				interval = tmp; //записываем значение tmp в interval
			}
		}
	}
	fin.close(); //закрываем файл
	return;
}
